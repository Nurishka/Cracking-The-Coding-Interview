#Project Euler. Problem 2.
#Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

def findSum():
    sum = 0
    currentTerm = 0
    secPrevTerm = 1
    firstPrevTerm = 2
    while currentTerm <= 4000000:
        currentTerm = firstPrevTerm + secPrevTerm
        if (currentTerm % 2 == 0):
            sum += currentTerm
        secPrevTerm = firstPrevTerm
        firstPrevTerm = currentTerm

    return sum + 2 # to add the the second term 2 which wasn't counted

print findSum()
